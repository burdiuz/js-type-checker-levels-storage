{"version":3,"file":"index.min.js","sources":["node_modules/@actualwave/has-own/has-own.js","source/levels.js","source/storage.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","import hasOwn from '@actualwave/has-own';\n\nexport const REPORT_NEVER = 'never';\nexport const REPORT_ONCE = 'once';\nexport const REPORT_ALL = 'all';\n\nconst REPORT_KEY = Symbol('type-checkers:report-level');\nconst PROPERTY_REPORT_KEY = Symbol('type-checkers:property-report-level');\n\nlet globalReportingLevel = REPORT_ALL;\n\nconst validateReportingLevel = (level) => {\n  switch (level) {\n    case REPORT_NEVER:\n    case REPORT_ONCE:\n      return level;\n    default:\n      return REPORT_ALL;\n  }\n};\n\nexport const setGlobalReportingLevel = (level) => {\n  globalReportingLevel = validateReportingLevel(level);\n};\n\nexport const getGlobalReportingLevel = () => globalReportingLevel;\n\nconst setTargetGeneralReportingLevel = (target, level) => {\n  if (level) {\n    target[REPORT_KEY] = validateReportingLevel(level);\n  } else {\n    delete target[REPORT_KEY];\n  }\n};\n\nconst setTargetPropertyReportingLevel = (target, perPropertyLevels) => {\n  if (!perPropertyLevels) {\n    delete target[PROPERTY_REPORT_KEY];\n    return;\n  }\n\n  target[PROPERTY_REPORT_KEY] = Object.keys(perPropertyLevels).reduce(\n    (levels, prop) => {\n      levels[prop] = validateReportingLevel(perPropertyLevels[prop]);\n      return levels;\n    },\n    {}\n  );\n};\n\nexport const setReportingLevel = (target, generalLevel, perPropertyLevels) => {\n  setTargetGeneralReportingLevel(target, generalLevel);\n  setTargetPropertyReportingLevel(target, perPropertyLevels);\n};\n\nconst getTargetReportingLevel = (target, key) => {\n  if (hasOwn(target[PROPERTY_REPORT_KEY], key)) {\n    return target[PROPERTY_REPORT_KEY][key];\n  }\n\n  return target[REPORT_KEY];\n};\n\nexport const getReportingLevel = (target, key) => {\n  let level = getTargetReportingLevel(target, key);\n\n  if (!level) {\n    level = getTargetReportingLevel(target.constructor, key);\n  }\n\n  return level || getGlobalReportingLevel();\n};\n","import { REPORT_NEVER, REPORT_ONCE, REPORT_ALL, getReportingLevel } from './levels';\n\nexport const createTypesStorage = () => new Map();\n\n/**\n *\n * @param {Map} storage\n */\nexport const hasTypeInformation = (storage, key) => {\n  const info = storage.get(key);\n\n  return info && info.length;\n};\n\n/**\n *\n * @param {Map} storage\n * @param {*} key\n * @param {Function} callback\n */\nexport const getTypeInformation = (storage, key, callback) => {\n  const info = storage.get(key);\n\n  if (info) {\n    info.forEach((types) => callback(key, types));\n  }\n};\n\n/**\n *\n * @param {Map} storage\n * @param {*} key\n * @param {*} types\n * @param {Number} level\n */\nexport const storeTypeInformation = (storage, key, types, level) => {\n  if (!types) return;\n\n  switch (level) {\n    case REPORT_NEVER:\n      // storage.delete(key); // do we need this?\n      break;\n    case REPORT_ONCE:\n      storage.delete(key);\n      storage.set(key, [types]);\n      break;\n    case REPORT_ALL:\n    default:\n      {\n        const info = storage.get(key);\n        if (info) {\n          info.push(types);\n        } else {\n          storage.set(key, [types]);\n        }\n      }\n      break;\n  }\n};\n\nexport const storeTypeInformationFor = (storage, target, key, types) =>\n  storeTypeInformation(storage, key, types, getReportingLevel(target, key));\n"],"names":["Object","defineProperty","exports","value","hasOwn","has","target","property","Boolean","call","prototype","hasOwnProperty","REPORT_KEY","Symbol","PROPERTY_REPORT_KEY","globalReportingLevel","validateReportingLevel","level","getGlobalReportingLevel","getTargetReportingLevel","key","getReportingLevel","constructor","storeTypeInformation","storage","types","delete","set","info","get","push","Map","callback","forEach","length","generalLevel","perPropertyLevels","keys","reduce","levels","prop"],"mappings":"6NAEAA,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IAEtD,MAAMC,EAAS,CACZC,GACD,CAACC,EAAQC,IACTC,QAAQF,GAAUD,EAAII,KAAKH,EAAQC,IAHtB,CAIbP,OAAOU,UAAUC,gBAEnBT,SAAiBE,EACjBF,UAAkBE,4ICLZQ,EAAaC,OAAO,8BACpBC,EAAsBD,OAAO,uCAEnC,IAAIE,EALsB,MAO1B,MAAMC,EAA0BC,WACtBA,OAVkB,YACD,cAYdA,gBAXa,QAqBbC,EAA0B,IAAMH,EAEN,IAACT,EAAQW,EA4BhD,MAAME,EAA0B,CAACb,EAAQc,IACnChB,EAAOE,EAAOQ,GAAsBM,GAC/Bd,EAAOQ,GAAqBM,GAG9Bd,EAAOM,GAGHS,EAAoB,CAACf,EAAQc,SACpCH,EAAQE,EAAwBb,EAAQc,UAEvCH,MACKE,EAAwBb,EAAOgB,YAAaF,IAG/CH,GAASC,KCnCLK,EAAuB,CAACC,EAASJ,EAAKK,EAAOR,QACnDQ,SAEGR,ODpCkB,kBACD,SCwCbS,OAAON,KACPO,IAAIP,GAAMK,cDxCE,qBC6CZG,EAAOJ,EAAQK,IAAIT,GACrBQ,IACGE,KAAKL,KAEFE,IAAIP,GAAMK,oBDjDF,qBAFE,sBACD,4BCDO,KAAM,IAAIM,0BAkBV,EAACP,EAASJ,EAAKY,WACzCJ,EAAOJ,EAAQK,IAAIT,GAErBQ,KACGK,QAASR,GAAUO,EAASZ,EAAKK,2BAhBR,EAACD,EAASJ,WACpCQ,EAAOJ,EAAQK,IAAIT,UAElBQ,GAAQA,EAAKM,4DAiDiB,EAACV,EAASlB,EAAQc,EAAKK,IAC5DF,EAAqBC,EAASJ,EAAKK,EAAOJ,EAAkBf,EAAQc,2DDxC9BH,CAAAA,MACfD,EAAuBC,+CA4Bf,EAACX,EAAQ6B,EAAcC,KAvBhB9B,EAwBPA,GAxBeW,EAwBPkB,KAtB9BvB,GAAcI,EAAuBC,UAErCX,EAAOM,GAIsB,EAACN,EAAQ8B,KAC1CA,IAKEtB,GAAuBd,OAAOqC,KAAKD,GAAmBE,OAC3D,CAACC,EAAQC,OACAA,GAAQxB,EAAuBoB,EAAkBI,IACjDD,cAPFjC,EAAOQ,KAegBR,EAAQ8B"}